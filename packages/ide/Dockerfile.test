###############################################################################
# Build and run the Docker Image for testing VSCode extensions.
#
# To build it, run in the repository root:
#   docker build -t codefusion-studio-vscode-test-ubuntu-22.04:latest .
#
# To run a build:
#  docker run -it --rm -v ${PWD}:/opt/app codefusion-studio-vscode-test-ubuntu-22.04:latest
#

FROM ubuntu:22.04

ARG NODE=18.14.0

ENV TZ=Europe/London
RUN apt-get update && apt-get install --no-install-recommends -y \
    tzdata && \
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \
    echo $TZ > /etc/timezone

RUN apt-get update && apt-get install --no-install-recommends -y \
  ca-certificates \
  curl \
  git \
  libasound2 \
  libatk1.0-0 \
  libatk-bridge2.0-0 \
  libgbm1 \
  libglib2.0-0 \
  libgtk-3-0 \
  libnss3 \
  xsel \
  xvfb \
  libxcb-icccm4 \
  libxcb-image0 \
  libxcb-keysyms1 \
  libxcb-randr0 \
  libxcb-render-util0 \
  libxcb-shape0 \
  libxcb-xinerama0 \
  libxcb-xkb1 \
  libxkbcommon-x11-0 \
  fluxbox \
  && \
  rm -rf /var/lib/apt/lists/*

RUN update-ca-certificates

# Install NVM, NodeJS, yarn, vsce
ENV NVM_DIR=/.nvm
RUN mkdir $NVM_DIR
RUN curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.39.3/install.sh | bash && \
  /bin/bash -c "source $NVM_DIR/nvm.sh && nvm install ${NODE} && npm install -g yarn @vscode/vsce"
